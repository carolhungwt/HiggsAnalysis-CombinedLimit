/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef HZZ4L_ONSHELL_2D
#define HZZ4L_ONSHELL_2D

#include "RooAbsPdf.h"
#include "RooSetProxy.h"
#include "RooRealProxy.h"
#include "RooRealVar.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TH3F.h"
#include "TH1.h"
#include "RooDataHist.h"
#include "RooHistFunc.h"
using namespace RooFit;

class HZZ4L_onshell_2D : public RooAbsPdf {
protected:

 RooRealProxy mass;
  RooRealProxy dbkg;
  RooListProxy _FuncList ;  //  List of funcficients
  TIterator* _FuncIter ;    //! Iterator over funcficient lis
  RooListProxy _coefList ;  //  List of funcficients
  TIterator* _coefIter ;    //! Iterator over funcficient lis
  Double_t evaluate() const ;
public:
  HZZ4L_onshell_2D() {} ; 
  HZZ4L_onshell_2D(const char *name, const char *title,
		       RooAbsReal& _mass,
		       RooAbsReal& _dbkg,
			const RooArgList& inFuncList,
			const RooArgList& inCoefList);
		    
  HZZ4L_onshell_2D(const HZZ4L_onshell_2D& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new HZZ4L_onshell_2D(*this,newname); }
  inline virtual ~HZZ4L_onshell_2D() {}
  
  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;
	double nsig,nbkg;

private:

  ClassDef(HZZ4L_onshell_2D,1) // Your description goes here...
};
 
#endif
